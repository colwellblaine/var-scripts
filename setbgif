#!/bin/sh

function gifplay {
	[ "$argnum" -gt "2" ] && {  echo -e "\n\033[0;31m>Invalid number of arguments\nUSAGE:\n |	When pointing to gif: $0 /path/name.gif speed\
		\n |	When pointing to image: $0 /path/name\n |	Otherwise: $0\n" ; exit 1 ; }
	set='xwallpaper --zoom'
	dir=/tmp/setbgif
	name="$1"
	[ -n "$2" ] && speed="$2" || speed="0.010"
	hash=`md5sum $name | cut -f1 -d" "`
	[[ ! -d $dir ]] && mkdir $dir
	[[ ! -d $dir/$hash ]] && { mkdir $dir/$hash ; echo "Splitting gif..."; convert -coalesce $name $dir/$hash/$hash.png ; echo done ; }
	while : ; do for i in ` ls $dir/$hash -v ` ; do $set $dir/$hash/$i ; sleep "$speed" ; done ; done
}

function dirset {
	bgloc=`find "$bgloc" -type f | shuf -n 1` && notify-send -i "$bgloc" "Random Wallpaper chosen."
	[[ `file --mime-type -b "$bgloc"` = "image/gif" ]] && gifplay "$bgloc" &
	xwallpaper --zoom "$bgloc"
}


argnum="$#"
[ -n "$1" ] && bgloc="$1" || bgloc="$HOME/.local/share/bg"
case "$(file --mime-type -b "$bgloc")" in
	image/gif) gifplay $bgloc &;;
	image/*) notify-send -i "$bgloc" "Changing wallpaper..."; xwallpaper --zoom "$bgloc";;
	inode/directory ) dirset;;
	*) notify-send "Error" "Not a valid image." ; exit 1;;
esac
